"""empty message

Revision ID: f48c98ea4afb
Revises: 
Create Date: 2019-06-11 11:06:41.202500

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f48c98ea4afb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('common_key',
    sa.Column('key_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('key_id'),
    schema='func'
    )
    op.create_table('car',
    sa.Column('car_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('car_id'),
    schema='public'
    )
    op.create_table('destination',
    sa.Column('destination_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('destination_id'),
    schema='public'
    )
    op.create_table('permission',
    sa.Column('perm_id', sa.Integer(), nullable=False),
    sa.Column('perm_name', sa.String(length=100), nullable=True),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('perm_id'),
    schema='public'
    )
    op.create_table('role',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('role_id'),
    schema='public'
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_emp_id', sa.String(length=100), nullable=True),
    sa.Column('user_name', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_users_user_name'), 'users', ['user_name'], unique=False, schema='public')
    op.create_table('feature',
    sa.Column('feature_key', sa.Integer(), nullable=False),
    sa.Column('feature_id', sa.Integer(), nullable=True),
    sa.Column('feature_no', sa.String(), nullable=True),
    sa.Column('feature_name', sa.String(length=256), nullable=True),
    sa.Column('feature_type', sa.String(length=256), nullable=True),
    sa.Column('parent_feature_id', sa.Integer(), nullable=True),
    sa.Column('ver', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=256), nullable=True),
    sa.Column('reason_details', sa.String(length=1024), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('creat_user', sa.Integer(), nullable=True),
    sa.Column('update_user', sa.Integer(), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('update_type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['creat_user'], ['public.users.user_id'], ),
    sa.ForeignKeyConstraint(['feature_id'], ['func.common_key.key_id'], ),
    sa.ForeignKeyConstraint(['update_user'], ['public.users.user_id'], ),
    sa.PrimaryKeyConstraint('feature_key'),
    sa.UniqueConstraint('feature_id', 'ver'),
    schema='func'
    )
    op.create_index(op.f('ix_func_feature_creat_user'), 'feature', ['creat_user'], unique=False, schema='func')
    op.create_index(op.f('ix_func_feature_status'), 'feature', ['status'], unique=False, schema='func')
    op.create_index(op.f('ix_func_feature_update_user'), 'feature', ['update_user'], unique=False, schema='func')
    op.create_table('spec_catalog',
    sa.Column('catalog_key', sa.Integer(), nullable=False),
    sa.Column('catalog_id', sa.Integer(), nullable=True),
    sa.Column('catalog_no', sa.String(), nullable=True),
    sa.Column('catalog_title', sa.String(length=256), nullable=True),
    sa.Column('type', sa.String(length=256), nullable=True),
    sa.Column('outline', sa.String(), nullable=True),
    sa.Column('percondition', sa.String(), nullable=True),
    sa.Column('invocation', sa.String(), nullable=True),
    sa.Column('parent_cat_id', sa.Integer(), nullable=False),
    sa.Column('ver', sa.Integer(), nullable=True),
    sa.Column('creat_user', sa.Integer(), nullable=True),
    sa.Column('update_user', sa.Integer(), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['catalog_id'], ['func.common_key.key_id'], ),
    sa.ForeignKeyConstraint(['creat_user'], ['public.users.user_id'], ),
    sa.ForeignKeyConstraint(['update_user'], ['public.users.user_id'], ),
    sa.PrimaryKeyConstraint('catalog_key'),
    sa.UniqueConstraint('catalog_id', 'ver'),
    schema='func'
    )
    op.create_index(op.f('ix_func_spec_catalog_catalog_id'), 'spec_catalog', ['catalog_id'], unique=False, schema='func')
    op.create_index(op.f('ix_func_spec_catalog_creat_user'), 'spec_catalog', ['creat_user'], unique=False, schema='func')
    op.create_index(op.f('ix_func_spec_catalog_update_user'), 'spec_catalog', ['update_user'], unique=False, schema='func')
    op.create_table('spec_func',
    sa.Column('func_key', sa.Integer(), nullable=False),
    sa.Column('func_id', sa.Integer(), nullable=True),
    sa.Column('func_no', sa.String(), nullable=True),
    sa.Column('func_title', sa.String(length=256), nullable=True),
    sa.Column('func_type', sa.String(length=100), nullable=True),
    sa.Column('content', sa.String(length=256), nullable=True),
    sa.Column('ver', sa.Integer(), nullable=True),
    sa.Column('catalog_id', sa.Integer(), nullable=True),
    sa.Column('test_type', sa.String(length=100), nullable=True),
    sa.Column('creat_user', sa.Integer(), nullable=True),
    sa.Column('update_user', sa.Integer(), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['creat_user'], ['public.users.user_id'], ),
    sa.ForeignKeyConstraint(['func_id'], ['func.common_key.key_id'], ),
    sa.ForeignKeyConstraint(['update_user'], ['public.users.user_id'], ),
    sa.PrimaryKeyConstraint('func_key'),
    sa.UniqueConstraint('func_id', 'ver'),
    schema='func'
    )
    op.create_index(op.f('ix_func_spec_func_creat_user'), 'spec_func', ['creat_user'], unique=False, schema='func')
    op.create_index(op.f('ix_func_spec_func_status'), 'spec_func', ['status'], unique=False, schema='func')
    op.create_index(op.f('ix_func_spec_func_update_user'), 'spec_func', ['update_user'], unique=False, schema='func')
    op.create_table('project',
    sa.Column('proj_id', sa.Integer(), nullable=False),
    sa.Column('proj_name', sa.String(length=256), nullable=True),
    sa.Column('describe', sa.String(), nullable=True),
    sa.Column('create_user', sa.Integer(), nullable=True),
    sa.Column('update_user', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=256), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['create_user'], ['public.users.user_id'], ),
    sa.ForeignKeyConstraint(['update_user'], ['public.users.user_id'], ),
    sa.PrimaryKeyConstraint('proj_id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_project_create_user'), 'project', ['create_user'], unique=False, schema='public')
    op.create_index(op.f('ix_public_project_proj_name'), 'project', ['proj_name'], unique=False, schema='public')
    op.create_index(op.f('ix_public_project_status'), 'project', ['status'], unique=False, schema='public')
    op.create_index(op.f('ix_public_project_update_user'), 'project', ['update_user'], unique=False, schema='public')
    op.create_table('role_perm_rel',
    sa.Column('gid', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('perm_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['perm_id'], ['public.permission.perm_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['public.role.role_id'], ),
    sa.PrimaryKeyConstraint('gid'),
    schema='public'
    )
    op.create_table('feature_func',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('feature_id', sa.Integer(), nullable=True),
    sa.Column('func_id', sa.Integer(), nullable=True),
    sa.Column('proj_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['feature_id'], ['func.common_key.key_id'], ),
    sa.ForeignKeyConstraint(['func_id'], ['func.common_key.key_id'], ),
    sa.ForeignKeyConstraint(['proj_id'], ['public.project.proj_id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='func'
    )
    op.create_index(op.f('ix_func_feature_func_feature_id'), 'feature_func', ['feature_id'], unique=False, schema='func')
    op.create_index(op.f('ix_func_feature_func_func_id'), 'feature_func', ['func_id'], unique=False, schema='func')
    op.create_index(op.f('ix_func_feature_func_proj_id'), 'feature_func', ['proj_id'], unique=False, schema='func')
    op.create_table('proj_catalog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('proj_id', sa.Integer(), nullable=True),
    sa.Column('catalog_id', sa.Integer(), nullable=True),
    sa.Column('ver', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=256), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('expend_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['catalog_id', 'ver'], ['func.spec_catalog.catalog_id', 'func.spec_catalog.ver'], name='proj_catalog'),
    sa.ForeignKeyConstraint(['proj_id'], ['public.project.proj_id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='func'
    )
    op.create_index(op.f('ix_func_proj_catalog_proj_id'), 'proj_catalog', ['proj_id'], unique=False, schema='func')
    op.create_index(op.f('ix_func_proj_catalog_status'), 'proj_catalog', ['status'], unique=False, schema='func')
    op.create_table('proj_feature',
    sa.Column('proj_feature_key', sa.Integer(), nullable=False),
    sa.Column('proj_id', sa.Integer(), nullable=True),
    sa.Column('feature_id', sa.Integer(), nullable=True),
    sa.Column('ver', sa.Integer(), nullable=True),
    sa.Column('statement', sa.String(length=1024), nullable=True),
    sa.Column('remark', sa.String(length=1024), nullable=True),
    sa.Column('qa', sa.String(), nullable=True),
    sa.Column('spec_change', sa.String(length=256), nullable=True),
    sa.Column('creat_user', sa.Integer(), nullable=True),
    sa.Column('update_user', sa.Integer(), nullable=True),
    sa.Column('creat_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=256), nullable=True),
    sa.Column('apply_expend', sa.Boolean(), nullable=True),
    sa.Column('expend_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['creat_user'], ['public.users.user_id'], ),
    sa.ForeignKeyConstraint(['feature_id', 'ver'], ['func.feature.feature_id', 'func.feature.ver'], name='proj_feature'),
    sa.ForeignKeyConstraint(['proj_id'], ['public.project.proj_id'], ),
    sa.ForeignKeyConstraint(['update_user'], ['public.users.user_id'], ),
    sa.PrimaryKeyConstraint('proj_feature_key'),
    schema='func'
    )
    op.create_index(op.f('ix_func_proj_feature_creat_user'), 'proj_feature', ['creat_user'], unique=False, schema='func')
    op.create_index(op.f('ix_func_proj_feature_proj_id'), 'proj_feature', ['proj_id'], unique=False, schema='func')
    op.create_index(op.f('ix_func_proj_feature_status'), 'proj_feature', ['status'], unique=False, schema='func')
    op.create_index(op.f('ix_func_proj_feature_update_user'), 'proj_feature', ['update_user'], unique=False, schema='func')
    op.create_table('proj_func',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('proj_id', sa.Integer(), nullable=True),
    sa.Column('func_id', sa.Integer(), nullable=True),
    sa.Column('ver', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=256), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('feature_change_status', sa.Integer(), nullable=True),
    sa.Column('expend_id', sa.Integer(), nullable=True),
    sa.Column('apply_expend', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['func_id', 'ver'], ['func.spec_func.func_id', 'func.spec_func.ver'], name='proj_func'),
    sa.ForeignKeyConstraint(['proj_id'], ['public.project.proj_id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='func'
    )
    op.create_index('func_proj_func_func_id_ver_idx', 'proj_func', ['func_id', 'ver'], unique=True, schema='func')
    op.create_index(op.f('ix_func_proj_func_proj_id'), 'proj_func', ['proj_id'], unique=False, schema='func')
    op.create_index(op.f('ix_func_proj_func_status'), 'proj_func', ['status'], unique=False, schema='func')
    op.create_table('rfq',
    sa.Column('rfq_id', sa.Integer(), nullable=False),
    sa.Column('proj_id', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['proj_id'], ['public.project.proj_id'], ),
    sa.PrimaryKeyConstraint('rfq_id'),
    schema='func'
    )
    op.create_index(op.f('ix_func_rfq_proj_id'), 'rfq', ['proj_id'], unique=False, schema='func')
    op.create_table('combination',
    sa.Column('combination_key', sa.Integer(), nullable=False),
    sa.Column('car_id', sa.Integer(), nullable=True),
    sa.Column('destination_id', sa.Integer(), nullable=True),
    sa.Column('proj_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['car_id'], ['public.car.car_id'], ),
    sa.ForeignKeyConstraint(['destination_id'], ['public.destination.destination_id'], ),
    sa.ForeignKeyConstraint(['proj_id'], ['public.project.proj_id'], ),
    sa.PrimaryKeyConstraint('combination_key'),
    schema='public'
    )
    op.create_index(op.f('ix_public_combination_car_id'), 'combination', ['car_id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_combination_destination_id'), 'combination', ['destination_id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_combination_proj_id'), 'combination', ['proj_id'], unique=False, schema='public')
    op.create_table('project_roles',
    sa.Column('gid', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('proj_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['proj_id'], ['public.project.proj_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['public.role.role_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.user_id'], ),
    sa.PrimaryKeyConstraint('gid'),
    schema='public'
    )
    op.create_index(op.f('ix_public_project_roles_proj_id'), 'project_roles', ['proj_id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_project_roles_role_id'), 'project_roles', ['role_id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_project_roles_user_id'), 'project_roles', ['user_id'], unique=False, schema='public')
    op.create_table('feature_rfq',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('proj_feature_key', sa.Integer(), nullable=True),
    sa.Column('rfq_if', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['proj_feature_key'], ['func.proj_feature.proj_feature_key'], ),
    sa.ForeignKeyConstraint(['rfq_if'], ['func.rfq.rfq_id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='func'
    )
    op.create_index(op.f('ix_func_feature_rfq_proj_feature_key'), 'feature_rfq', ['proj_feature_key'], unique=False, schema='func')
    op.create_index(op.f('ix_func_feature_rfq_rfq_if'), 'feature_rfq', ['rfq_if'], unique=False, schema='func')
    op.create_table('proj_feature_combination',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('proj_feature_key', sa.Integer(), nullable=True),
    sa.Column('combination_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['combination_id'], ['public.combination.combination_key'], ),
    sa.ForeignKeyConstraint(['proj_feature_key'], ['func.proj_feature.proj_feature_key'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='func'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('proj_feature_combination', schema='func')
    op.drop_index(op.f('ix_func_feature_rfq_rfq_if'), table_name='feature_rfq', schema='func')
    op.drop_index(op.f('ix_func_feature_rfq_proj_feature_key'), table_name='feature_rfq', schema='func')
    op.drop_table('feature_rfq', schema='func')
    op.drop_index(op.f('ix_public_project_roles_user_id'), table_name='project_roles', schema='public')
    op.drop_index(op.f('ix_public_project_roles_role_id'), table_name='project_roles', schema='public')
    op.drop_index(op.f('ix_public_project_roles_proj_id'), table_name='project_roles', schema='public')
    op.drop_table('project_roles', schema='public')
    op.drop_index(op.f('ix_public_combination_proj_id'), table_name='combination', schema='public')
    op.drop_index(op.f('ix_public_combination_destination_id'), table_name='combination', schema='public')
    op.drop_index(op.f('ix_public_combination_car_id'), table_name='combination', schema='public')
    op.drop_table('combination', schema='public')
    op.drop_index(op.f('ix_func_rfq_proj_id'), table_name='rfq', schema='func')
    op.drop_table('rfq', schema='func')
    op.drop_index(op.f('ix_func_proj_func_status'), table_name='proj_func', schema='func')
    op.drop_index(op.f('ix_func_proj_func_proj_id'), table_name='proj_func', schema='func')
    op.drop_index('func_proj_func_func_id_ver_idx', table_name='proj_func', schema='func')
    op.drop_table('proj_func', schema='func')
    op.drop_index(op.f('ix_func_proj_feature_update_user'), table_name='proj_feature', schema='func')
    op.drop_index(op.f('ix_func_proj_feature_status'), table_name='proj_feature', schema='func')
    op.drop_index(op.f('ix_func_proj_feature_proj_id'), table_name='proj_feature', schema='func')
    op.drop_index(op.f('ix_func_proj_feature_creat_user'), table_name='proj_feature', schema='func')
    op.drop_table('proj_feature', schema='func')
    op.drop_index(op.f('ix_func_proj_catalog_status'), table_name='proj_catalog', schema='func')
    op.drop_index(op.f('ix_func_proj_catalog_proj_id'), table_name='proj_catalog', schema='func')
    op.drop_table('proj_catalog', schema='func')
    op.drop_index(op.f('ix_func_feature_func_proj_id'), table_name='feature_func', schema='func')
    op.drop_index(op.f('ix_func_feature_func_func_id'), table_name='feature_func', schema='func')
    op.drop_index(op.f('ix_func_feature_func_feature_id'), table_name='feature_func', schema='func')
    op.drop_table('feature_func', schema='func')
    op.drop_table('role_perm_rel', schema='public')
    op.drop_index(op.f('ix_public_project_update_user'), table_name='project', schema='public')
    op.drop_index(op.f('ix_public_project_status'), table_name='project', schema='public')
    op.drop_index(op.f('ix_public_project_proj_name'), table_name='project', schema='public')
    op.drop_index(op.f('ix_public_project_create_user'), table_name='project', schema='public')
    op.drop_table('project', schema='public')
    op.drop_index(op.f('ix_func_spec_func_update_user'), table_name='spec_func', schema='func')
    op.drop_index(op.f('ix_func_spec_func_status'), table_name='spec_func', schema='func')
    op.drop_index(op.f('ix_func_spec_func_creat_user'), table_name='spec_func', schema='func')
    op.drop_table('spec_func', schema='func')
    op.drop_index(op.f('ix_func_spec_catalog_update_user'), table_name='spec_catalog', schema='func')
    op.drop_index(op.f('ix_func_spec_catalog_creat_user'), table_name='spec_catalog', schema='func')
    op.drop_index(op.f('ix_func_spec_catalog_catalog_id'), table_name='spec_catalog', schema='func')
    op.drop_table('spec_catalog', schema='func')
    op.drop_index(op.f('ix_func_feature_update_user'), table_name='feature', schema='func')
    op.drop_index(op.f('ix_func_feature_status'), table_name='feature', schema='func')
    op.drop_index(op.f('ix_func_feature_creat_user'), table_name='feature', schema='func')
    op.drop_table('feature', schema='func')
    op.drop_index(op.f('ix_public_users_user_name'), table_name='users', schema='public')
    op.drop_table('users', schema='public')
    op.drop_table('role', schema='public')
    op.drop_table('permission', schema='public')
    op.drop_table('destination', schema='public')
    op.drop_table('car', schema='public')
    op.drop_table('common_key', schema='func')
    # ### end Alembic commands ###
