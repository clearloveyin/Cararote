"""empty message

Revision ID: 53f17fda24b5
Revises: f48c98ea4afb
Create Date: 2019-06-11 15:32:38.136500

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '53f17fda24b5'
down_revision = 'f48c98ea4afb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('combination_car_id_fkey', 'combination', type_='foreignkey')
    op.drop_constraint('combination_destination_id_fkey', 'combination', type_='foreignkey')
    op.drop_constraint('combination_proj_id_fkey', 'combination', type_='foreignkey')
    op.create_foreign_key(None, 'combination', 'project', ['proj_id'], ['proj_id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'combination', 'car', ['car_id'], ['car_id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'combination', 'destination', ['destination_id'], ['destination_id'], source_schema='public', referent_schema='public')
    op.drop_constraint('project_create_user_fkey', 'project', type_='foreignkey')
    op.drop_constraint('project_update_user_fkey', 'project', type_='foreignkey')
    op.create_foreign_key(None, 'project', 'users', ['update_user'], ['user_id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'project', 'users', ['create_user'], ['user_id'], source_schema='public', referent_schema='public')
    op.drop_constraint('project_roles_proj_id_fkey', 'project_roles', type_='foreignkey')
    op.drop_constraint('project_roles_user_id_fkey', 'project_roles', type_='foreignkey')
    op.drop_constraint('project_roles_role_id_fkey', 'project_roles', type_='foreignkey')
    op.create_foreign_key(None, 'project_roles', 'users', ['user_id'], ['user_id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'project_roles', 'project', ['proj_id'], ['proj_id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'project_roles', 'role', ['role_id'], ['role_id'], source_schema='public', referent_schema='public')
    op.drop_constraint('role_perm_rel_role_id_fkey', 'role_perm_rel', type_='foreignkey')
    op.drop_constraint('role_perm_rel_perm_id_fkey', 'role_perm_rel', type_='foreignkey')
    op.create_foreign_key(None, 'role_perm_rel', 'role', ['role_id'], ['role_id'], source_schema='public', referent_schema='public')
    op.create_foreign_key(None, 'role_perm_rel', 'permission', ['perm_id'], ['perm_id'], source_schema='public', referent_schema='public')
    op.add_column('feature', sa.Column('create_time', sa.DateTime(), nullable=True), schema='func')
    op.add_column('feature', sa.Column('create_user', sa.Integer(), nullable=True), schema='func')
    op.create_index(op.f('ix_func_feature_create_user'), 'feature', ['create_user'], unique=False, schema='func')
    op.drop_index('ix_func_feature_creat_user', table_name='feature', schema='func')
    op.drop_constraint('feature_update_user_fkey', 'feature', schema='func', type_='foreignkey')
    op.drop_constraint('feature_creat_user_fkey', 'feature', schema='func', type_='foreignkey')
    op.create_foreign_key(None, 'feature', 'users', ['update_user'], ['user_id'], source_schema='func', referent_schema='public')
    op.create_foreign_key(None, 'feature', 'users', ['create_user'], ['user_id'], source_schema='func', referent_schema='public')
    op.drop_column('feature', 'creat_user', schema='func')
    op.drop_column('feature', 'creat_time', schema='func')
    op.drop_constraint('feature_func_proj_id_fkey', 'feature_func', schema='func', type_='foreignkey')
    op.create_foreign_key(None, 'feature_func', 'project', ['proj_id'], ['proj_id'], source_schema='func', referent_schema='public')
    op.drop_constraint('proj_catalog_proj_id_fkey', 'proj_catalog', schema='func', type_='foreignkey')
    op.create_foreign_key(None, 'proj_catalog', 'project', ['proj_id'], ['proj_id'], source_schema='func', referent_schema='public')
    op.drop_constraint('proj_feature_update_user_fkey', 'proj_feature', schema='func', type_='foreignkey')
    op.drop_constraint('proj_feature_creat_user_fkey', 'proj_feature', schema='func', type_='foreignkey')
    op.drop_constraint('proj_feature_proj_id_fkey', 'proj_feature', schema='func', type_='foreignkey')
    op.create_foreign_key(None, 'proj_feature', 'users', ['creat_user'], ['user_id'], source_schema='func', referent_schema='public')
    op.create_foreign_key(None, 'proj_feature', 'users', ['update_user'], ['user_id'], source_schema='func', referent_schema='public')
    op.create_foreign_key(None, 'proj_feature', 'project', ['proj_id'], ['proj_id'], source_schema='func', referent_schema='public')
    op.drop_constraint('proj_feature_combination_combination_id_fkey', 'proj_feature_combination', schema='func', type_='foreignkey')
    op.create_foreign_key(None, 'proj_feature_combination', 'combination', ['combination_id'], ['combination_key'], source_schema='func', referent_schema='public')
    op.drop_constraint('proj_func_proj_id_fkey', 'proj_func', schema='func', type_='foreignkey')
    op.create_foreign_key(None, 'proj_func', 'project', ['proj_id'], ['proj_id'], source_schema='func', referent_schema='public')
    op.drop_constraint('rfq_proj_id_fkey', 'rfq', schema='func', type_='foreignkey')
    op.create_foreign_key(None, 'rfq', 'project', ['proj_id'], ['proj_id'], source_schema='func', referent_schema='public')
    op.add_column('spec_catalog', sa.Column('create_time', sa.DateTime(), nullable=True), schema='func')
    op.add_column('spec_catalog', sa.Column('create_user', sa.Integer(), nullable=True), schema='func')
    op.create_index(op.f('ix_func_spec_catalog_create_user'), 'spec_catalog', ['create_user'], unique=False, schema='func')
    op.drop_index('ix_func_spec_catalog_creat_user', table_name='spec_catalog', schema='func')
    op.drop_constraint('spec_catalog_creat_user_fkey', 'spec_catalog', schema='func', type_='foreignkey')
    op.drop_constraint('spec_catalog_update_user_fkey', 'spec_catalog', schema='func', type_='foreignkey')
    op.create_foreign_key(None, 'spec_catalog', 'users', ['create_user'], ['user_id'], source_schema='func', referent_schema='public')
    op.create_foreign_key(None, 'spec_catalog', 'users', ['update_user'], ['user_id'], source_schema='func', referent_schema='public')
    op.drop_column('spec_catalog', 'creat_user', schema='func')
    op.drop_column('spec_catalog', 'creat_time', schema='func')
    op.add_column('spec_func', sa.Column('create_time', sa.DateTime(), nullable=True), schema='func')
    op.add_column('spec_func', sa.Column('create_user', sa.Integer(), nullable=True), schema='func')
    op.create_index(op.f('ix_func_spec_func_create_user'), 'spec_func', ['create_user'], unique=False, schema='func')
    op.drop_index('ix_func_spec_func_creat_user', table_name='spec_func', schema='func')
    op.drop_constraint('spec_func_creat_user_fkey', 'spec_func', schema='func', type_='foreignkey')
    op.drop_constraint('spec_func_update_user_fkey', 'spec_func', schema='func', type_='foreignkey')
    op.create_foreign_key(None, 'spec_func', 'users', ['create_user'], ['user_id'], source_schema='func', referent_schema='public')
    op.create_foreign_key(None, 'spec_func', 'users', ['update_user'], ['user_id'], source_schema='func', referent_schema='public')
    op.drop_column('spec_func', 'creat_user', schema='func')
    op.drop_column('spec_func', 'creat_time', schema='func')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('spec_func', sa.Column('creat_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True), schema='func')
    op.add_column('spec_func', sa.Column('creat_user', sa.INTEGER(), autoincrement=False, nullable=True), schema='func')
    op.drop_constraint(None, 'spec_func', schema='func', type_='foreignkey')
    op.drop_constraint(None, 'spec_func', schema='func', type_='foreignkey')
    op.create_foreign_key('spec_func_update_user_fkey', 'spec_func', 'users', ['update_user'], ['user_id'], source_schema='func')
    op.create_foreign_key('spec_func_creat_user_fkey', 'spec_func', 'users', ['creat_user'], ['user_id'], source_schema='func')
    op.create_index('ix_func_spec_func_creat_user', 'spec_func', ['creat_user'], unique=False, schema='func')
    op.drop_index(op.f('ix_func_spec_func_create_user'), table_name='spec_func', schema='func')
    op.drop_column('spec_func', 'create_user', schema='func')
    op.drop_column('spec_func', 'create_time', schema='func')
    op.add_column('spec_catalog', sa.Column('creat_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True), schema='func')
    op.add_column('spec_catalog', sa.Column('creat_user', sa.INTEGER(), autoincrement=False, nullable=True), schema='func')
    op.drop_constraint(None, 'spec_catalog', schema='func', type_='foreignkey')
    op.drop_constraint(None, 'spec_catalog', schema='func', type_='foreignkey')
    op.create_foreign_key('spec_catalog_update_user_fkey', 'spec_catalog', 'users', ['update_user'], ['user_id'], source_schema='func')
    op.create_foreign_key('spec_catalog_creat_user_fkey', 'spec_catalog', 'users', ['creat_user'], ['user_id'], source_schema='func')
    op.create_index('ix_func_spec_catalog_creat_user', 'spec_catalog', ['creat_user'], unique=False, schema='func')
    op.drop_index(op.f('ix_func_spec_catalog_create_user'), table_name='spec_catalog', schema='func')
    op.drop_column('spec_catalog', 'create_user', schema='func')
    op.drop_column('spec_catalog', 'create_time', schema='func')
    op.drop_constraint(None, 'rfq', schema='func', type_='foreignkey')
    op.create_foreign_key('rfq_proj_id_fkey', 'rfq', 'project', ['proj_id'], ['proj_id'], source_schema='func')
    op.drop_constraint(None, 'proj_func', schema='func', type_='foreignkey')
    op.create_foreign_key('proj_func_proj_id_fkey', 'proj_func', 'project', ['proj_id'], ['proj_id'], source_schema='func')
    op.drop_constraint(None, 'proj_feature_combination', schema='func', type_='foreignkey')
    op.create_foreign_key('proj_feature_combination_combination_id_fkey', 'proj_feature_combination', 'combination', ['combination_id'], ['combination_key'], source_schema='func')
    op.drop_constraint(None, 'proj_feature', schema='func', type_='foreignkey')
    op.drop_constraint(None, 'proj_feature', schema='func', type_='foreignkey')
    op.drop_constraint(None, 'proj_feature', schema='func', type_='foreignkey')
    op.create_foreign_key('proj_feature_proj_id_fkey', 'proj_feature', 'project', ['proj_id'], ['proj_id'], source_schema='func')
    op.create_foreign_key('proj_feature_creat_user_fkey', 'proj_feature', 'users', ['creat_user'], ['user_id'], source_schema='func')
    op.create_foreign_key('proj_feature_update_user_fkey', 'proj_feature', 'users', ['update_user'], ['user_id'], source_schema='func')
    op.drop_constraint(None, 'proj_catalog', schema='func', type_='foreignkey')
    op.create_foreign_key('proj_catalog_proj_id_fkey', 'proj_catalog', 'project', ['proj_id'], ['proj_id'], source_schema='func')
    op.drop_constraint(None, 'feature_func', schema='func', type_='foreignkey')
    op.create_foreign_key('feature_func_proj_id_fkey', 'feature_func', 'project', ['proj_id'], ['proj_id'], source_schema='func')
    op.add_column('feature', sa.Column('creat_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True), schema='func')
    op.add_column('feature', sa.Column('creat_user', sa.INTEGER(), autoincrement=False, nullable=True), schema='func')
    op.drop_constraint(None, 'feature', schema='func', type_='foreignkey')
    op.drop_constraint(None, 'feature', schema='func', type_='foreignkey')
    op.create_foreign_key('feature_creat_user_fkey', 'feature', 'users', ['creat_user'], ['user_id'], source_schema='func')
    op.create_foreign_key('feature_update_user_fkey', 'feature', 'users', ['update_user'], ['user_id'], source_schema='func')
    op.create_index('ix_func_feature_creat_user', 'feature', ['creat_user'], unique=False, schema='func')
    op.drop_index(op.f('ix_func_feature_create_user'), table_name='feature', schema='func')
    op.drop_column('feature', 'create_user', schema='func')
    op.drop_column('feature', 'create_time', schema='func')
    op.drop_constraint(None, 'role_perm_rel', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'role_perm_rel', schema='public', type_='foreignkey')
    op.create_foreign_key('role_perm_rel_perm_id_fkey', 'role_perm_rel', 'permission', ['perm_id'], ['perm_id'])
    op.create_foreign_key('role_perm_rel_role_id_fkey', 'role_perm_rel', 'role', ['role_id'], ['role_id'])
    op.drop_constraint(None, 'project_roles', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'project_roles', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'project_roles', schema='public', type_='foreignkey')
    op.create_foreign_key('project_roles_role_id_fkey', 'project_roles', 'role', ['role_id'], ['role_id'])
    op.create_foreign_key('project_roles_user_id_fkey', 'project_roles', 'users', ['user_id'], ['user_id'])
    op.create_foreign_key('project_roles_proj_id_fkey', 'project_roles', 'project', ['proj_id'], ['proj_id'])
    op.drop_constraint(None, 'project', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'project', schema='public', type_='foreignkey')
    op.create_foreign_key('project_update_user_fkey', 'project', 'users', ['update_user'], ['user_id'])
    op.create_foreign_key('project_create_user_fkey', 'project', 'users', ['create_user'], ['user_id'])
    op.drop_constraint(None, 'combination', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'combination', schema='public', type_='foreignkey')
    op.drop_constraint(None, 'combination', schema='public', type_='foreignkey')
    op.create_foreign_key('combination_proj_id_fkey', 'combination', 'project', ['proj_id'], ['proj_id'])
    op.create_foreign_key('combination_destination_id_fkey', 'combination', 'destination', ['destination_id'], ['destination_id'])
    op.create_foreign_key('combination_car_id_fkey', 'combination', 'car', ['car_id'], ['car_id'])
    # ### end Alembic commands ###
